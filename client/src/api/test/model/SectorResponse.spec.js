/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FastApi);
  }
}(this, function(expect, FastApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FastApi.SectorResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SectorResponse', function() {
    it('should create an instance of SectorResponse', function() {
      // uncomment below and update the code to test SectorResponse
      //var instance = new FastApi.SectorResponse();
      //expect(instance).to.be.a(FastApi.SectorResponse);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new FastApi.SectorResponse();
      //expect(instance).to.be();
    });

    it('should have the property geometry (base name: "geometry")', function() {
      // uncomment below and update the code to test the property geometry
      //var instance = new FastApi.SectorResponse();
      //expect(instance).to.be();
    });

    it('should have the property areaSqm (base name: "area_sqm")', function() {
      // uncomment below and update the code to test the property areaSqm
      //var instance = new FastApi.SectorResponse();
      //expect(instance).to.be();
    });

    it('should have the property riskProbability (base name: "risk_probability")', function() {
      // uncomment below and update the code to test the property riskProbability
      //var instance = new FastApi.SectorResponse();
      //expect(instance).to.be();
    });

    it('should have the property totalMinesFound (base name: "total_mines_found")', function() {
      // uncomment below and update the code to test the property totalMinesFound
      //var instance = new FastApi.SectorResponse();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new FastApi.SectorResponse();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new FastApi.SectorResponse();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new FastApi.SectorResponse();
      //expect(instance).to.be();
    });

    it('should have the property assignedNgo (base name: "assigned_ngo")', function() {
      // uncomment below and update the code to test the property assignedNgo
      //var instance = new FastApi.SectorResponse();
      //expect(instance).to.be();
    });

    it('should have the property assignedTeamLead (base name: "assigned_team_lead")', function() {
      // uncomment below and update the code to test the property assignedTeamLead
      //var instance = new FastApi.SectorResponse();
      //expect(instance).to.be();
    });

    it('should have the property assignedOperator (base name: "assigned_operator")', function() {
      // uncomment below and update the code to test the property assignedOperator
      //var instance = new FastApi.SectorResponse();
      //expect(instance).to.be();
    });

  });

}));
